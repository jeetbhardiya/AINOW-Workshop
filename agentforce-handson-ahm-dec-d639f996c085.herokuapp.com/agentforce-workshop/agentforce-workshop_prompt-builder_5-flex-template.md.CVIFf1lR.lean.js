import{_ as t,c as a,a1 as s,o as n}from"./chunks/framework.BRP8cXOc.js";const o="/agentforce-workshop/prompt-builder-flex-builder.DTY6ug3E.webp",r="/agentforce-workshop/prompt-builder-flex-builder-apex.Z8_2vJEv.webp",i="/agentforce-workshop/prompt-builder-flex-builder-reason-1.Tt20oWQi.webp",l="/agentforce-workshop/prompt-builder-flex-builder-reason-2.BPlkEwpP.webp",p="/agentforce-workshop/prompt-builder-flex-screenflow-prompt-action.hdcMuVtB.webp",c="/agentforce-workshop/prompt-builder-flex-screenflow-prompt-response.BkBrWIYE.webp",d="/agentforce-workshop/prompt-builder-flex-quick-action.Df0xJ0QZ.webp",w=JSON.parse('{"title":"Exercise 5: Create a Flex Template","description":"","frontmatter":{},"headers":[],"relativePath":"agentforce-workshop/prompt-builder/5-flex-template.md","filePath":"agentforce-workshop/prompt-builder/5-flex-template.md"}'),h={name:"agentforce-workshop/prompt-builder/5-flex-template.md"};function g(u,e,m,f,b,x){return n(),a("div",null,e[0]||(e[0]=[s(`<h1 id="exercise-5-create-a-flex-template" tabindex="-1">Exercise 5: Create a Flex Template <a class="header-anchor" href="#exercise-5-create-a-flex-template" aria-label="Permalink to &quot;Exercise 5: Create a Flex Template&quot;">​</a></h1><p>In this exercise, you&#39;ll create a <strong>Flex template</strong> that generates a personalized schedule for a guest. The personalized schedule includes the time and location of resort experiences that are available today, and that match the guest&#39;s interests. You&#39;ll ground the template with data generated by calling an <strong>Apex method</strong>. This template can be invoked from anywhere. In this exercise, we invoke it from a screen flow on the guest record page.</p><h2 id="step-1-create-the-flex-template" tabindex="-1">Step 1: Create the Flex template <a class="header-anchor" href="#step-1-create-the-flex-template" aria-label="Permalink to &quot;Step 1: Create the Flex template&quot;">​</a></h2><ol><li><p>In Setup, search for <strong>Prompt Builder</strong>, and select <strong>Prompt Builder</strong>.</p></li><li><p>Click the <strong>New Prompt Template</strong> button.</p></li><li><p>Configure the prompt template as follows:</p><table tabindex="0"><thead><tr><th><strong>Parameter</strong></th><th><strong>Value</strong></th></tr></thead><tbody><tr><td>Prompt Template Type</td><td>Flex</td></tr><tr><td>Prompt Template Name</td><td>Generate Personalized Schedule</td></tr><tr><td>API Name</td><td>Keep default</td></tr><tr><td>Template Description</td><td>Generate a personalized schedule that includes the time and location of resort experiences that are available today, and that match the guest&#39;s interests.</td></tr><tr><td>Resource Name</td><td>Contact</td></tr><tr><td>API Name</td><td>myContact</td></tr><tr><td>Source Type</td><td>Object</td></tr><tr><td>Object</td><td>Contact</td></tr></tbody></table></li><li><p>Click <strong>Next</strong>.</p></li><li><p>Paste the following text in the Prompt Template Workspace:</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki Codey High Noon vp-code" tabindex="0"><code><span class="line"><span>Your name is {!$User.FirstName}. You work in the guest success team at {!$Organization.Name}.</span></span>
<span class="line"><span>Introduce yourself, then present the list of resort activities happening today that match the guest&#39;s interests.</span></span>
<span class="line"><span>For clarity, use a bullet list.</span></span>
<span class="line"><span>For each activity, include name, time, location and duration on a single line. Do not include the date.</span></span>
<span class="line"><span>Tell the guest to reach out if they&#39;d like to book any of these activities.</span></span>
<span class="line"><span>List of activities happening today that match the guest&#39;s interests:</span></span></code></pre></div></li><li><p>In the Preview panel, select <strong>Sofia Rodriguez</strong> as the Contact.</p></li><li><p>Click <strong>Save &amp; Preview</strong>.</p><p><img src="`+o+'" alt="" data-zoomable="true"></p><ul><li>In the <strong>Resolution</strong> panel, examine the prompt that was generated.</li><li>In the <strong>Response</strong> panel, examine the personalized list that the LLM generated.</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>If the LLM generated a bullet list of resort experiences, this is an example of hallucination. Because the prompt didn&#39;t include resort experiences, the LLM decided to generate made-up experiences. To avoid hallucination, we need to ground the prompt in real customer data: in this case, a list of resort experience sessions that match the guest&#39;s interests.</p></div></li><li><p>On the line following &quot;Experiences that match the guest&#39;s interests&quot;, use the Resource search box and select: <strong>Apex &gt; PersonalizedGuestExperiences</strong>.</p></li><li><p>Click <strong>Save &amp; Preview</strong>.</p><p><img src="'+r+`" alt="" data-zoomable="true"></p><ul><li><p>In the <strong>Resolution</strong> panel, examine the prompt that was generated. Notice that the Apex merge field in the template has been replaced with the list of experience sessions that match the guest&#39;s interests generated by the Invocable Apex method.</p></li><li><p>In the <strong>Response</strong> panel, examine the message generated by the LLM. Now that you grounded the prompt in real data, the list presented by the LLM shows the actual experiences offered at Coral Cloud Resorts today and that match the guest interests.</p></li></ul></li></ol><h2 id="step-2-leverage-the-reasoning-capabilities-of-large-language-models" tabindex="-1">Step 2: Leverage the reasoning capabilities of Large Language Models <a class="header-anchor" href="#step-2-leverage-the-reasoning-capabilities-of-large-language-models" aria-label="Permalink to &quot;Step 2: Leverage the reasoning capabilities of Large Language Models&quot;">​</a></h2><p>Large language models (LLMs) can not only generate content, but they can also reason and orchestrate tasks. In this step, you&#39;ll modify the prompt to ask the LLM to create a suggested schedule for the guest, taking into account the start time and duration of each experience, making sure that suggested experiences don&#39;t overlap, and that the guest has at least 60 minutes between experiences.</p><ol><li><p>Modify the prompt template as follows:</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki Codey High Noon vp-code" tabindex="0"><code><span class="line"><span>Your name is {!$User.FirstName}. You work in the guest success team at {!$Organization.Name}.</span></span>
<span class="line"><span>Introduce yourself, then present the list of resort activities happening today that match the guest&#39;s interests.</span></span>
<span class="line"><span>For clarity, use a bullet list.</span></span>
<span class="line"><span>For each activity, include name, time, location and duration on a single line. Do not include the date.</span></span>
<span class="line"><span>Then add a suggested schedule.</span></span>
<span class="line"><span>Take into account the start time and duration of each activity.</span></span>
<span class="line"><span>Make sure that you don&#39;t include activities that overlap.</span></span>
<span class="line"><span>Make sure the guest has at least 60 minutes of free time between activities.</span></span>
<span class="line"><span>Present the suggested schedule in chronological order.</span></span>
<span class="line"><span>Tell the guest to reach out if they&#39;d like to book any of these activities.</span></span>
<span class="line"><span>List of activities happening today that match the guest&#39;s interests:</span></span>
<span class="line"><span>{!$Apex:PersonalizedGuestExperiences.Prompt}</span></span></code></pre></div></li><li><p>Click <strong>Save &amp; Preview</strong>.</p><p><img src="`+i+'" alt="" data-zoomable="true"></p></li><li><p>If the suggested schedule doesn&#39;t look right (for example, it features experiences that overlap), select the <strong>OpenAI GPT 4 Turbo</strong> model in the configuration panel on the right, and click <strong>Save &amp; Preview</strong> again. LLMs keep getting better. OpenAI GPT 4 Turbo in particular is much better at reasoning and orchestrating tasks compared to OpenAI GPT 3.5 Turbo.</p><p><img src="'+l+'" alt="" data-zoomable="true"></p></li><li><p>Click <strong>Activate</strong> when you are satisfied with your template.</p></li></ol><h2 id="step-3-use-the-prompt-in-a-screen-flow" tabindex="-1">Step 3: Use the Prompt in a Screen Flow <a class="header-anchor" href="#step-3-use-the-prompt-in-a-screen-flow" aria-label="Permalink to &quot;Step 3: Use the Prompt in a Screen Flow&quot;">​</a></h2><ol><li><p>In <strong>Setup</strong>, search for <strong>Flow</strong> and select <strong>Flows</strong>.</p></li><li><p>Open the <strong>Personalized Schedule</strong> flow.</p></li><li><p>Mouse over the circle under the <strong>Get Contact</strong> element, click <strong>+</strong>, search for <strong>Generate</strong>, and select <strong>Generate Personalized Schedule</strong>.</p></li><li><p>Configure the action as follows:</p><table tabindex="0"><thead><tr><th><strong>Field</strong></th><th><strong>Value</strong></th></tr></thead><tbody><tr><td>Label</td><td>Invoke Prompt</td></tr><tr><td>API Name</td><td>Keep default</td></tr><tr><td>Description</td><td>Invoke the Generate Personalized Schedule Prompt</td></tr><tr><td>Contact</td><td>Select <strong>Contact from Get_Contact</strong>. Remove the dot that is automatically added after <code>{!Get_Contact}</code></td></tr></tbody></table><p>Use the screenshot below to confirm that you entered the right values.</p><p><img src="'+p+'" alt="" data-zoomable="true"></p></li><li><p>Edit the <strong>Display Result</strong> element.</p></li><li><p>Click the Display Text Component (Insert Variable Here).</p></li><li><p>In the Resource Picker in the right panel, select <strong>Outputs from Invoke_Prompt &gt; promptResponse</strong> (make sure that you delete &quot;Insert Variable Here&quot; if it appears in the rich edit area).</p><p><img src="'+c+'" alt="" data-zoomable="true"></p></li><li><p>Click <strong>Done</strong>.</p></li><li><p>Click <strong>Save As &gt; A New Version</strong>. Click <strong>Save</strong>.</p></li><li><p>Click <strong>Activate</strong>.</p></li><li><p>In the Coral Cloud Resorts app, click the <strong>Contacts tab</strong> and open <strong>Sofia Rodriguez</strong>.</p></li><li><p>Click the <strong>Personalized Schedule</strong> Quick Action.</p><p><img src="'+d+'" alt="" data-zoomable="true"></p></li></ol><p>The Quick Action displays the <strong>Personalized Schedule</strong> screen flow that you just updated. The screen flow invokes the <strong>Generate Personalized Schedule</strong> Flex template you created earlier in this exercise to generate a personalized schedule for the current guest. This is a great example showing how Flex templates can be used to bring generative AI anywhere into your applications.</p>',10)]))}const v=t(h,[["render",g]]);export{w as __pageData,v as default};
