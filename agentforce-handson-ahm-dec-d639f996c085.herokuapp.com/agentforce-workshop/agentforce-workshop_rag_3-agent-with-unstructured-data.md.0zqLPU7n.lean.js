import{_ as e}from"./chunks/agents-flow-topic-action-tab.DgDFYXli.js";import{_ as o,c as n,a1 as a,o as s}from"./chunks/framework.BRP8cXOc.js";const r="/agentforce-workshop/rag-3-new-action.DOCKfJcM.webp",i="/agentforce-workshop/rag-3-action-config.DK2L2bks.webp",c="/agentforce-workshop/rag-3-add-action.s44riV_o.webp",l="/agentforce-workshop/rag-3-agent-preview.DAZUd-QV.webp",k=JSON.parse('{"title":"Exercise 3: Power Agents with Unstructured Data","description":"","frontmatter":{},"headers":[],"relativePath":"agentforce-workshop/rag/3-agent-with-unstructured-data.md","filePath":"agentforce-workshop/rag/3-agent-with-unstructured-data.md"}'),p={name:"agentforce-workshop/rag/3-agent-with-unstructured-data.md"};function d(g,t,u,h,m,b){return s(),n("div",null,t[0]||(t[0]=[a('<h1 id="exercise-3-power-agents-with-unstructured-data" tabindex="-1">Exercise 3: Power Agents with Unstructured Data <a class="header-anchor" href="#exercise-3-power-agents-with-unstructured-data" aria-label="Permalink to &quot;Exercise 3: Power Agents with Unstructured Data&quot;">​</a></h1><p>In this exercise, you&#39;ll create an action that enables your agent to answer resort policy questions using RAG and unstructured data.</p><h2 id="step-1-create-the-agent-custom-action" tabindex="-1">Step 1: Create the agent custom action <a class="header-anchor" href="#step-1-create-the-agent-custom-action" aria-label="Permalink to &quot;Step 1: Create the agent custom action&quot;">​</a></h2><ol><li><p>From Setup, open <strong>Agent Actions</strong>.</p></li><li><p>Click <strong>New Agent Action</strong>, and configure the action as follows:</p><table tabindex="0"><thead><tr><th><strong>Field</strong></th><th><strong>Value</strong></th></tr></thead><tbody><tr><td>Reference Action Type</td><td>Prompt Template</td></tr><tr><td>Reference Action</td><td>Policy Questions</td></tr><tr><td>Agent Action Label</td><td>Keep default</td></tr><tr><td>Agent Action API Name</td><td>Keep default</td></tr></tbody></table><p>Use the screenshot below to make sure that you entered the values correctly.</p><p><img src="'+r+'" alt="" data-zoomable="true"></p></li><li><p>Click <strong>Next</strong>.</p></li><li><p>Enter the following <strong>Instructions</strong> for the the Question Input:</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki Codey High Noon vp-code" tabindex="0"><code><span class="line"><span>The question is open-ended text input from a user in a chat, related to resort policies.</span></span></code></pre></div></li><li><p>For the <strong>Prompt Response</strong> Output, check <strong>Show in conversation</strong>.</p><p>Use the screenshot below to make sure that you entered the values correctly.</p><p><img src="'+i+'" alt="" data-zoomable="true"></p></li><li><p>Click <strong>Finish</strong>.</p></li></ol><h2 id="step-2-add-the-action-to-your-agent" tabindex="-1">Step 2: Add the action to your agent <a class="header-anchor" href="#step-2-add-the-action-to-your-agent" aria-label="Permalink to &quot;Step 2: Add the action to your agent&quot;">​</a></h2><p>Next, let&#39;s add the custom action to your agent.</p><ol><li><p>From Setup, open <strong>Agents</strong> (under Agent Studio).</p></li><li><p>Click on <strong>Einstein Copilot</strong> in the agent list.</p></li><li><p>Click <strong>Open in Builder</strong>.</p></li><li><p>In the <strong>Topics</strong> sidebar, click the <strong>CustomerServiceAssistant</strong> topic.</p></li><li><p>Click <strong>New Instruction</strong>.</p></li><li><p>Enter the following instruction into the new instruction field:</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki Codey High Noon vp-code" tabindex="0"><code><span class="line"><span>Always use the Policy Questions action when a question is asked about hotel policies, experiences policies, wedding policies, or valet service policies.</span></span></code></pre></div></li><li><p>Click <strong>Save</strong>.</p></li><li><p>In the <strong>Topics</strong> sidebar, click the <strong>CustomerServiceAssistant</strong> topic.</p></li><li><p>Click the <strong>This Topic&#39;s Actions</strong> tab.</p><p><img src="'+e+'" alt="" data-zoomable="true"></p></li><li><p>Click the <strong>New</strong> button, and click <strong>Add from Asset Library</strong> to add an action.</p></li><li><p>Check the <strong>Policy Questions</strong> action and click <strong>Finish</strong>.</p><p><img src="'+c+'" alt="" data-zoomable="true"></p></li></ol><h2 id="step-3-try-it-out" tabindex="-1">Step 3: Try it out <a class="header-anchor" href="#step-3-try-it-out" aria-label="Permalink to &quot;Step 3: Try it out&quot;">​</a></h2><ol><li><p>In the Conversation Preview panel, enter the following prompt:</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki Codey High Noon vp-code" tabindex="0"><code><span class="line"><span>What wedding venue options are available at Coral Cloud Resorts?</span></span></code></pre></div></li><li><p>Examine the response generated by the LLM. Look at the planner in the middle of the screen and notice that the reasoning engine selected the <strong>Policy Questions</strong> action.</p><p><img src="'+l+'" alt="" data-zoomable="true"></p></li></ol>',9)]))}const y=o(p,[["render",d]]);export{k as __pageData,y as default};
