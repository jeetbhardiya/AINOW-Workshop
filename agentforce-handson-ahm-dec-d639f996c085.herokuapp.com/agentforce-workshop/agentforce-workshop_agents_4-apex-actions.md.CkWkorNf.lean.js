import{_ as e}from"./chunks/agents-flow-topic-action-tab.DgDFYXli.js";import{_ as a,c as n,a1 as t,o}from"./chunks/framework.BRP8cXOc.js";const l="/agentforce-workshop/agents-apex-create-action.DlXKJ4G3.webp",p="/agentforce-workshop/agents-apex-add-action.CPPiGFb1.webp",r="/agentforce-workshop/agents-apex-builder.Ia-d9R_I.webp",f=JSON.parse('{"title":"Exercise 4: Extend Agents with Apex Actions","description":"","frontmatter":{},"headers":[],"relativePath":"agentforce-workshop/agents/4-apex-actions.md","filePath":"agentforce-workshop/agents/4-apex-actions.md"}'),c={name:"agentforce-workshop/agents/4-apex-actions.md"};function i(y,s,h,d,g,u){return o(),n("div",null,s[0]||(s[0]=[t(`<h1 id="exercise-4-extend-agents-with-apex-actions" tabindex="-1">Exercise 4: Extend Agents with Apex Actions <a class="header-anchor" href="#exercise-4-extend-agents-with-apex-actions" aria-label="Permalink to &quot;Exercise 4: Extend Agents with Apex Actions&quot;">​</a></h1><p>Coral Cloud Resorts front-desk employees need an easy way to check the weather, so that they can recommend experiences based on the weather forecast. In this exercise, you&#39;ll create a custom action using an Invocable Apex class that allows your agent to invoke a third-party weather API.</p><h2 id="step-1-examine-the-check-weather-apex-class" tabindex="-1">Step 1: Examine the &quot;Check Weather&quot; Apex Class <a class="header-anchor" href="#step-1-examine-the-check-weather-apex-class" aria-label="Permalink to &quot;Step 1: Examine the &quot;Check Weather&quot; Apex Class&quot;">​</a></h2><ol><li><p>From Setup, search for <strong>Apex</strong> and click <strong>Apex Classes</strong>.</p></li><li><p>Open the <strong>CheckWeather</strong> class.</p></li><li><p>Examine the code:</p><div class="language-apex"><button title="Copy Code" class="copy"></button><span class="lang">apex</span><pre class="shiki Codey High Noon vp-code" tabindex="0"><code><span class="line"><span style="color:#000060;">public</span><span style="color:#550000;"> with sharing</span><span style="color:#2A150D;"> class</span><span style="color:#550000;"> CheckWeather</span><span style="color:#005555;"> {</span></span>
<span class="line"><span style="color:#1F3A93;">    @InvocableMethod</span><span style="color:#005555;">(</span></span>
<span class="line"><span style="color:#0A3055;">        label</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;">=</span><span style="color:#0F4880;">&#39;Check Weather&#39;</span></span>
<span class="line"><span style="color:#0A3055;">        description</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;">=</span><span style="color:#0F4880;">&#39;Check weather at Coral Cloud Resorts at a specific date. The date must be in the future, not today or earlier.&#39;</span></span>
<span class="line"><span style="color:#005555;">    )</span></span>
<span class="line"><span style="color:#000060;">    public</span><span style="color:#000060;"> static</span><span style="color:#1F3A93;"> List</span><span style="color:#005555;">&lt;</span><span style="color:#1F3A93;">WeatherResponse</span><span style="color:#005555;">&gt;</span><span style="color:#914F15;"> getWeather</span><span style="color:#005555;">(</span></span>
<span class="line"><span style="color:#1F3A93;">        List</span><span style="color:#005555;">&lt;</span><span style="color:#1F3A93;">WeatherRequest</span><span style="color:#005555;">&gt;</span><span style="color:#1460AA;"> requests</span></span>
<span class="line"><span style="color:#005555;">    )</span><span style="color:#005555;"> {</span></span>
<span class="line"><span style="color:#6C7076;">        // Retrieve the date for which we want to check the weather</span></span>
<span class="line"><span style="color:#2A150D;">        Datetime</span><span style="color:#0A3055;"> dateToCheck</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;"> =</span><span style="color:#005555;"> (</span><span style="color:#2A150D;">Datetime</span><span style="color:#005555;">)</span><span style="color:#0A3055;"> requests</span><span style="color:#005555;">[</span><span style="color:#22313F;">0</span><span style="color:#005555;">].</span><span style="color:#0A3055;">dateToCheck</span><span style="color:#005555;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6C7076;">        // Call a weather service to retrieve the weather through an API call</span></span>
<span class="line"><span style="color:#1F3A93;">        WeatherService</span><span style="color:#005555;">.</span><span style="color:#1F3A93;">Weather</span><span style="color:#0A3055;"> weather</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;"> =</span><span style="color:#0A3055;"> WeatherService</span><span style="color:#005555;">.</span><span style="color:#914F15;">getResortWeather</span><span style="color:#005555;">(</span></span>
<span class="line"><span style="color:#0A3055;">            dateToCheck</span></span>
<span class="line"><span style="color:#005555;">        );</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6C7076;">        // Create the response for the agent</span></span>
<span class="line"><span style="color:#1F3A93;">        WeatherResponse</span><span style="color:#0A3055;"> response</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;"> =</span><span style="color:#2A150D;"> new</span><span style="color:#1F3A93;"> WeatherResponse</span><span style="color:#005555;">();</span></span>
<span class="line"><span style="color:#0A3055;">        response</span><span style="color:#005555;">.</span><span style="color:#0A3055;">minTemperature</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;"> =</span><span style="color:#0A3055;"> weather</span><span style="color:#005555;">.</span><span style="color:#0A3055;">minTemperatureC</span><span style="color:#005555;">;</span></span>
<span class="line"><span style="color:#0A3055;">        response</span><span style="color:#005555;">.</span><span style="color:#0A3055;">maxTemperature</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;"> =</span><span style="color:#0A3055;"> weather</span><span style="color:#005555;">.</span><span style="color:#0A3055;">maxTemperatureC</span><span style="color:#005555;">;</span></span>
<span class="line"><span style="color:#0A3055;">        response</span><span style="color:#005555;">.</span><span style="color:#0A3055;">temperatureDescription</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;"> =</span></span>
<span class="line"><span style="color:#0F4880;">            &#39;Temperatures will be between &#39;</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;"> +</span></span>
<span class="line"><span style="color:#0A3055;">            weather</span><span style="color:#005555;">.</span><span style="color:#0A3055;">minTemperatureC</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;"> +</span></span>
<span class="line"><span style="color:#0F4880;">            &#39;°C (&#39;</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;"> +</span></span>
<span class="line"><span style="color:#0A3055;">            weather</span><span style="color:#005555;">.</span><span style="color:#0A3055;">minTemperatureF</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;"> +</span></span>
<span class="line"><span style="color:#0F4880;">            &#39;°F) and &#39;</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;"> +</span></span>
<span class="line"><span style="color:#0A3055;">            weather</span><span style="color:#005555;">.</span><span style="color:#0A3055;">maxTemperatureC</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;"> +</span></span>
<span class="line"><span style="color:#0F4880;">            &#39;°C (&#39;</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;"> +</span></span>
<span class="line"><span style="color:#0A3055;">            weather</span><span style="color:#005555;">.</span><span style="color:#0A3055;">maxTemperatureF</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;"> +</span></span>
<span class="line"><span style="color:#0F4880;">            &#39;°F) at Coral Cloud Resorts.&#39;</span><span style="color:#005555;">;</span></span>
<span class="line"><span style="color:#2A150D;">        return</span><span style="color:#2A150D;"> new</span><span style="color:#1F3A93;"> List</span><span style="color:#005555;">&lt;</span><span style="color:#1F3A93;">WeatherResponse</span><span style="color:#005555;">&gt;{</span><span style="color:#0A3055;"> response</span><span style="color:#005555;"> };</span></span>
<span class="line"><span style="color:#005555;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000060;">    public</span><span style="color:#2A150D;"> class</span><span style="color:#550000;"> WeatherRequest</span><span style="color:#005555;"> {</span></span>
<span class="line"><span style="color:#1F3A93;">        @InvocableVariable</span><span style="color:#005555;">(</span></span>
<span class="line"><span style="color:#0A3055;">            required</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;">=</span><span style="color:#58007E;">true</span></span>
<span class="line"><span style="color:#0A3055;">            description</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;">=</span><span style="color:#0F4880;">&#39;Date for which we want to check the temperature. The variable needs to be an Apex Date type with format    yyyy-MM-dd.&#39;</span></span>
<span class="line"><span style="color:#005555;">        )</span></span>
<span class="line"><span style="color:#000060;">        public</span><span style="color:#2A150D;"> Date</span><span style="color:#0A3055;"> dateToCheck</span><span style="color:#005555;">;</span></span>
<span class="line"><span style="color:#005555;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#000060;">    public</span><span style="color:#2A150D;"> class</span><span style="color:#550000;"> WeatherResponse</span><span style="color:#005555;"> {</span></span>
<span class="line"><span style="color:#1F3A93;">        @InvocableVariable</span><span style="color:#005555;">(</span></span>
<span class="line"><span style="color:#0A3055;">            description</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;">=</span><span style="color:#0F4880;">&#39;Minimum temperature in Celsius at Coral Cloud Resorts location for the provided date&#39;</span></span>
<span class="line"><span style="color:#005555;">        )</span></span>
<span class="line"><span style="color:#000060;">        public</span><span style="color:#2A150D;"> Decimal</span><span style="color:#0A3055;"> minTemperature</span><span style="color:#005555;">;</span></span>
<span class="line"><span style="color:#1F3A93;">        @InvocableVariable</span><span style="color:#005555;">(</span></span>
<span class="line"><span style="color:#0A3055;">            description</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;">=</span><span style="color:#0F4880;">&#39;Maximum temperature in Celsius at Coral Cloud Resorts location for the provided date&#39;</span></span>
<span class="line"><span style="color:#005555;">        )</span></span>
<span class="line"><span style="color:#000060;">        public</span><span style="color:#2A150D;"> Decimal</span><span style="color:#0A3055;"> maxTemperature</span><span style="color:#005555;">;</span></span>
<span class="line"><span style="color:#1F3A93;">        @InvocableVariable</span><span style="color:#005555;">(</span></span>
<span class="line"><span style="color:#0A3055;">            description</span><span style="color:#2C3E50;font-style:italic;font-weight:bold;">=</span><span style="color:#0F4880;">&#39;Description of temperatures at Coral Cloud Resorts location for the provided date&#39;</span></span>
<span class="line"><span style="color:#005555;">        )</span></span>
<span class="line"><span style="color:#000060;">        public</span><span style="color:#2A150D;"> String</span><span style="color:#0A3055;"> temperatureDescription</span><span style="color:#005555;">;</span></span>
<span class="line"><span style="color:#005555;">    }</span></span>
<span class="line"><span style="color:#005555;">}</span></span></code></pre></div><p>The <code>getWeather()</code> method is defined as an <code>@InvocableMethod</code> so it can be invoked by your agent. The method returns a <code>WeatherResponse</code> object. The attributes of the <code>WeatherResponse</code> class are defined as <code>@InvocableVariable</code>. The descriptions in both <code>@InvocableMethod</code> and <code>@InvocableVariable</code> are important because they allow your agent to understand how to use the action.</p></li></ol><h2 id="step-2-create-the-agent-custom-action" tabindex="-1">Step 2: Create the Agent Custom Action <a class="header-anchor" href="#step-2-create-the-agent-custom-action" aria-label="Permalink to &quot;Step 2: Create the Agent Custom Action&quot;">​</a></h2><ol><li><p>From Setup, open <strong>Agents Actions</strong>.</p></li><li><p>Click <strong>New Agent Action</strong>.</p></li><li><p>Configure the action as follows:</p><table tabindex="0"><thead><tr><th><strong>Field</strong></th><th><strong>Value</strong></th></tr></thead><tbody><tr><td>Reference Action Type</td><td>Apex</td></tr><tr><td>Reference Action</td><td>Check Weather</td></tr><tr><td>Agent Action Label</td><td>Keep default</td></tr><tr><td>Agent Action API Name</td><td>Keep default</td></tr></tbody></table><p><img src="`+l+'" alt="" data-zoomable="true"></p></li><li><p>Click <strong>Next</strong>.</p></li><li><p>Notice that the instructions fields are pre-filled based on the descriptions provided in the Apex code.</p></li><li><p>Check <strong>Collect data from user</strong> for the input (<code>dateToCheck</code>).</p></li><li><p>Check <strong>Show in conversation</strong> for the <code>temperatureDescription</code> output.</p></li><li><p>Click <strong>Finish</strong>.</p></li></ol><h2 id="step-3-add-the-action-to-your-agent" tabindex="-1">Step 3: Add the action to your agent <a class="header-anchor" href="#step-3-add-the-action-to-your-agent" aria-label="Permalink to &quot;Step 3: Add the action to your agent&quot;">​</a></h2><ol><li><p>From Setup, open <strong>Agents</strong> (under Agent Studio).</p></li><li><p>Click <strong>Einstein Copilot</strong> in the agent list.</p></li><li><p>Click <strong>Open in Builder</strong>.</p></li><li><p>In the <strong>Topics</strong> sidebar, click the <strong>CustomerServiceAssistant</strong> topic.</p></li><li><p>Click the <strong>This Topic&#39;s Actions</strong> tab.</p><p><img src="'+e+'" alt="" data-zoomable="true"></p></li><li><p>Click the <strong>New</strong> button, and click <strong>Add from Asset Library</strong> to add an action.</p></li><li><p>Check the <strong>Check Weather</strong> action and click <strong>Finish</strong>.</p><p><img src="'+p+'" alt="" data-zoomable="true"></p></li></ol><h2 id="step-4-try-it-out" tabindex="-1">Step 4: Try it out <a class="header-anchor" href="#step-4-try-it-out" aria-label="Permalink to &quot;Step 4: Try it out&quot;">​</a></h2><ol><li><p>In the Conversation Preview panel, enter the following prompt:</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki Codey High Noon vp-code" tabindex="0"><code><span class="line"><span>Check the weather for tomorrow</span></span></code></pre></div><p><img src="'+r+'" alt="" data-zoomable="true"></p><p>Examine the planner and note that the reasoning engine selected the <strong>Check Weather</strong> action to fullfill the request.</p></li><li><p>Explore the reasoning capabilities of an Agent by asking a complex prompt like:</p><div class="language-txt"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki Codey High Noon vp-code" tabindex="0"><code><span class="line"><span>Issue a $50 credit to Sofia Rodriguez only if the weather tomorrow is less than 10 degrees.</span></span></code></pre></div></li><li><p>Click the <strong>back arrow button</strong> to go back to setup.</p></li></ol><p>That&#39;s how easy it is to extend agents with custom actions powered by Apex.</p>',11)]))}const m=a(c,[["render",i]]);export{f as __pageData,m as default};
